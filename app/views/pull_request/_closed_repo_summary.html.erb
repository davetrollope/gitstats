<h1 align="center">Closed Pull Request Data</h1><h2 align="center">Repo Summary</h2>

<%
  repos = pr_data.map {|pr| pr[:repo]}.uniq
  lifecycle_data = [
      { name: "Merge Time", data: pr_data.pluck(:repo,:merge_time) },
      { name: "Close Time", data: pr_data.pluck(:repo,:close_time) }
  ]

  # Establish which columns have useful data
  mrg_time_enabled = lifecycle_data[0][:data].any? {|value| value[1] > 0 }
  intg_time_enabled = lifecycle_data[1][:data].any? {|value| value[1] > 0 }

  lifecycle_data.delete_at(1) if !intg_time_enabled
  lifecycle_data.delete_at(0) if !mrg_time_enabled
  %>

<!-- We could use ajax to retrieve the data, but we don't want to get different data than
     is shown in the table so this needs to be syncronously loaded.
  -->
<%= column_chart pr_data.pluck(:repo,:total), ytitle: "Number of PRs" %>

<%= bar_chart lifecycle_data, stacked: true, xtitle: "PR Lifecycle (hours)", height: "#{repos.count*20}px" %>

<table id="closed_repo_prs" class="table table-condensed table-striped" width="100%">
  <thead><tr align="left">
    <th>Repo</th>
    <th>PR Count</th>
    <th>Authors</th>
    <% if mrg_time_enabled %>
      <th>Average Merge Time<br/><sup>(hours)</sup></th>
    <%
      end
      if intg_time_enabled
    %>
      <th>Average Integration Time<br/><sup>(hours)</sup></th>
    <% end %>
  </tr></thead>

  <tbody>
  <% pr_data.each {|repo_summary| %>
      <tr>
        <td><%= link_to repo_summary[:repo], PullRequestHelper.github_repo_path(repo_summary[:repo]) %></td>
        <td><%= repo_summary[:total] %></td>
        <td><%= repo_summary[:authors] %></td>
        <% if mrg_time_enabled %>
          <td><%= '%.2f' % repo_summary[:merge_time] %></td>
        <%
          end
          if intg_time_enabled
        %>
          <td><%= '%.2f' % repo_summary[:intg_time] %></td>
        <% end %>
      </tr>
  <% } %>
  </tbody>
</table>

<%= render 'init_table', locals: { table_name: 'closed_repo_prs' } %>

